name: itcj

services:
  redis:
    restart: always
    image: redis:7
    # No exponemos puerto en prod, solo red interna

  postgres:
    restart: always
    build:
      context: ../..
      dockerfile: docker/backend/Dockerfile.db
    env_file: ../../.env.prod
    volumes:
      - pgdata:/var/lib/postgresql/data
    # No exponemos puerto en prod
    logging:
      driver: json-file
      options: 
        max-size: "10m"
        max-file: "3"

  backend:
    restart: always
    build:
      context: ../..
      dockerfile: docker/backend/Dockerfile
    env_file: ../../.env.prod
    volumes:
      # Solo montamos el código necesario, NO todo el directorio
      - ../../itcj:/app/itcj:ro
      - ../../wsgi.py:/app/wsgi.py:ro
      - ../../requirements.txt:/app/requirements.txt:ro
      - ../../migrations:/app/migrations:ro  # Agregar esta línea
      # CSV si lo necesitas
      - ../../database/CSV:/app/database/CSV:ro
    depends_on:
      - postgres
      - redis
    # No exponemos puerto, nginx lo maneja
    logging:
      driver: json-file
      options: 
        max-size: "10m"
        max-file: "3"

  nginx:
    restart: always
    image: nginx:alpine
    environment:
      TZ: America/Chihuahua
    volumes:
      - ../nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      # Montamos solo los static (read-only)
      - ../../itcj/core/static:/www/static/core:ro
      - ../../itcj/apps/agendatec/static:/www/static/agendatec:ro
      - ../../itcj/apps/tickets/static:/www/static/tickets:ro
    depends_on:
      - backend
    ports:
      # Solo exponemos en localhost para que nginx del servidor lo proxee
      - "127.0.0.1:8080:80"
    logging:
      driver: json-file
      options: 
        max-size: "10m"
        max-file: "3"

volumes:
  pgdata: